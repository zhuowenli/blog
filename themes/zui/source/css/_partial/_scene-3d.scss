/*
 * Author: 卓文理
 * Email: zhuowenligg@gmail.com
 * Date: 2020-07-07 11:29:23
 */

$border-color: #ff7668;

.scene-3d {
    position: fixed;
    top: 0;
    right: 0;
    z-index: 100;
    width: 100vw;
    height: 100vh;
    box-sizing: border-box;
    perspective: 900px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
    pointer-events: none;
    opacity: 0;

    &.fullScreenScene {
        opacity: 1;
        pointer-events: none;
        transition: opacity 0.3s;
    }

    &.backgroundTriangles {
        z-index: -1;
    }

    &.mainTriangles {
        z-index: 1;
    }

    * {
        transform-style: preserve-3d;
    }

    .object {
        position: absolute;
        top: 50%;
        right: 50%;
        height: 0;
        width: 0;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;

        * {
            position: absolute;
            top: 0;
            left: 0;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .flat,
        .flat * {
            position: static;
        }
    }

    .heroTriangles {
        --triangleSize: 15vw;
        --triangleBorderSize: 21.213203435596427vw;
        --triangleDepth: 3vw;

        .triangleAnchor{
            transition: transform 0.1s ease;
            &.mainTriangleTop {
                transform: scale3d(1.3, 1, 1) translateY(-15vw) rotateZ(180deg);
            }
            &.mainTriangleRight {
                transform: translateX(35vw) rotateZ(250deg);
            }
            &.mainTriangleBottom {
                transform: translateX(5vw) translateY(15vw) rotateY(-10deg) rotateZ(10deg);
            }
            &.mainTriangleLeft {
                transform: scale3d(0.8, 1, 1) translateX(-45vw) rotateZ(80deg);
            }
            &.backgroundTriangleTop {
                transform: scale3d(0.3, 0.6, 0.6) translateX(35vw) translateY(-20vw) translateZ(-15vw) rotateX(20deg) rotateZ(180deg);
            }
            &.backgroundTriangleRight {
                transform: scale3d(0.7, 0.6, 0.7) translateX(30vw) translateY(-15vw) translateZ(-15vw) rotateZ(250deg);
            }
            &.backgroundTriangleBottom {
                transform: scale3d(0.3, 0.6, 0.6) translateX(-150vw) translateY(-30vw) translateZ(-15vw) rotateY(-10deg) rotateZ(10deg);
            }
            &.backgroundTriangleLeft {
                transform: scale3d(0.3, 0.4, 0.4) translateX(-100vw) translateY(45vw) translateZ(-15vw) rotateZ(80deg);
            }
            .triangle {
                transform-origin: 0 calc(var(--triangleSize) / 2);
                position: relative;

                .front,
                .back {
                    top: 0;
                    width: 30vw;
                    height: 15vw;
                    background: url("../../assets/triangle-face.svg") no-repeat center;
                    background-size: 100% 100%;

                    &::after,
                    &::before {
                        position: absolute;
                        display: block;
                        background: #ffffff;
                        height: var(--triangleDepth);
                        width: var(--triangleBorderSize);
                        border-top: 2px solid $border-color;
                        border-right: 4px solid $border-color;
                        border-bottom: 2px solid $border-color;
                        border-left: 4px solid $border-color;
                        box-sizing: border-box;
                    }
                }

                .front {
                    transform: translateX(calc(var(--triangleSize) * -1));
                    &::after,
                    &::before {
                        content: '';
                        transform-origin: 0 50%;
                        top: calc(var(--triangleDepth) / -2);
                    }
                    &::after {
                        transform: translateX(var(--triangleSize)) rotateX(90deg) rotateY(45deg) translateY(calc(var(--triangleDepth) / -2));
                    }
                    &::before {
                        transform: translateX(var(--triangleSize)) rotateX(90deg) rotateY(135deg) translateY(calc(var(--triangleDepth) / -2));
                    }
                }

                .back {
                    transform: translateX(calc(var(--triangleSize) * -1)) translateZ(calc(var(--triangleDepth) * -1));
                    &::after {
                        content: '';
                        transform-origin: 0 0;
                        top: var(--triangleSize);
                        width: calc(var(--triangleSize) * 2);
                        transform: rotateX(90deg);
                    }
                }
            }
        }
    }

    &.behindTransition .heroTriangles .triangleAnchor .triangle {
        transform-origin: 0 calc(var(--triangleSize) * 1.2);
    }
}

@media screen and (max-width: 1000px) {
    .scene-3d {
        width: 100vw;
        height: 100vh;
        .heroTriangles .triangleAnchor.mainTriangleBottom {
            top: 20vh;
        }
        .heroTriangles .triangleAnchor.mainTriangleTop {
            top: -20vh;
        }
    }
}
